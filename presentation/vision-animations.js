// –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Å–ª–∞–π–¥–∞ "–í–∏–∂–Ω"
class VisionAnimations {
    constructor() {
        this.visionSlide = document.querySelector('.vision-slide');
        this.visionCards = document.querySelectorAll('.vision-card');
        this.init();
    }

    init() {
        this.setupCardInteractions();
        this.setupScrollAnimations();
    }

    setupCardInteractions() {
        this.visionCards.forEach((card, index) => {
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            card.addEventListener('mouseenter', () => {
                this.animateCardHover(card, index);
            });

            card.addEventListener('mouseleave', () => {
                this.animateCardLeave(card);
            });

            // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –∫–ª–∏–∫–µ
            card.addEventListener('click', () => {
                this.animateCardClick(card, index);
            });
        });
    }

    animateCardHover(card, index) {
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–≤–µ—á–µ–Ω–∏–µ
        card.style.transform = 'translateY(-15px) scale(1.05)';
        card.style.boxShadow = '0 35px 70px rgba(102, 126, 234, 0.3)';
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∏–∫–æ–Ω–∫–∏
        const icon = card.querySelector('.card-icon');
        if (icon) {
            icon.style.animation = 'float-icon-hover 0.5s ease-out forwards';
        }

        // –ê–Ω–∏–º–∞—Ü–∏—è —Å–≤–µ—á–µ–Ω–∏—è
        const glow = card.querySelector('.card-glow');
        if (glow) {
            glow.style.animation = 'pulse-glow-hover 1s ease-in-out infinite';
        }
    }

    animateCardLeave(card) {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        card.style.transform = 'translateY(0) scale(1)';
        card.style.boxShadow = '0 20px 40px rgba(0, 0, 0, 0.1)';
        
        const icon = card.querySelector('.card-icon');
        if (icon) {
            icon.style.animation = 'float-icon 3s ease-in-out infinite';
        }

        const glow = card.querySelector('.card-glow');
        if (glow) {
            glow.style.animation = 'pulse-glow 2s ease-in-out infinite';
        }
    }

    animateCardClick(card, index) {
        // –ê–Ω–∏–º–∞—Ü–∏—è –∫–ª–∏–∫–∞ - –ø—É–ª—å—Å–∞—Ü–∏—è
        card.style.animation = 'card-pulse 0.6s ease-out';
        
        setTimeout(() => {
            card.style.animation = '';
        }, 600);

        // –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        this.showCardDetails(index);
    }

    showCardDetails(index) {
        const details = [
            "–î–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è LLM —Å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º",
            "–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –ø–∏–∫–æ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã —Ç—Ä–µ–Ω–¥–æ–≤",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∏ —Ä–µ–≥–∏–æ–Ω—ã"
        ];

        // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification(details[index]);
    }

    showNotification(message) {
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.className = 'vision-notification';
        notification.innerHTML = `
            <div class="notification-content">
                <span class="notification-icon">üí°</span>
                <span class="notification-text">${message}</span>
            </div>
        `;

        document.body.appendChild(notification);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.classList.add('show');
        }, 100);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }

    setupScrollAnimations() {
        // –ü–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
        let lastScrollY = window.scrollY;

        const handleScroll = () => {
            const currentScrollY = window.scrollY;
            const scrollDelta = currentScrollY - lastScrollY;

            this.visionCards.forEach((card, index) => {
                const speed = 0.1 + (index * 0.05);
                const translateY = scrollDelta * speed * -1;
                
                if (Math.abs(scrollDelta) > 1) {
                    card.style.transform = `translateY(${translateY}px)`;
                }
            });

            lastScrollY = currentScrollY;
        };

        window.addEventListener('scroll', handleScroll);
    }
}

// –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const visionNotificationStyles = `
.vision-notification {
    position: fixed;
    top: 20px;
    right: 20px;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.9));
    border: 1px solid rgba(102, 126, 234, 0.2);
    border-radius: 15px;
    padding: 15px 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(10px);
    transform: translateX(100%);
    opacity: 0;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 1000;
    max-width: 300px;
}

.vision-notification.show {
    transform: translateX(0);
    opacity: 1;
}

.notification-content {
    display: flex;
    align-items: center;
    gap: 12px;
}

.notification-icon {
    font-size: 1.2rem;
}

.notification-text {
    font-size: 0.9rem;
    color: var(--text-primary);
    line-height: 1.4;
}

@media (prefers-color-scheme: dark) {
    .vision-notification {
        background: linear-gradient(135deg, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.85));
        border-color: rgba(102, 126, 234, 0.3);
    }
    
    .notification-text {
        color: #ffffff;
    }
}

/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ */
@keyframes card-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

@keyframes float-icon-hover {
    0% { transform: translateY(0) rotate(0deg); }
    50% { transform: translateY(-10px) rotate(5deg); }
    100% { transform: translateY(-8px) rotate(3deg); }
}

@keyframes pulse-glow-hover {
    0%, 100% { opacity: 0.8; transform: translate(-50%, -50%) scale(1.1); }
    50% { opacity: 1; transform: translate(-50%, -50%) scale(1.2); }
}
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç
const styleSheet = document.createElement('style');
styleSheet.textContent = visionNotificationStyles;
document.head.appendChild(styleSheet);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
        new VisionAnimations();
    }, 1000);
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.VisionAnimations = VisionAnimations;