import React, { useEffect, useRef } from 'react';
import { AnimatedSlide } from './animations/AnimatedSlide';
import { Navigation } from './components/Navigation';
import { usePresentationStore } from './store/usePresentationStore';
import { useEvents } from './hooks/useEvents';
import { setupGlobalPresentationAPI } from './utils/presentationUtils';
import { preloadImages, presentationImages } from './utils/animationUtils';
import type { Slide as SlideType } from './types';
import './styles/global/index.css';

const slides: SlideType[] = [
  {
    id: '1',
    title: 'Media X: AI-Powered Media Platform',
    content: (
      <div className="content-wrapper">
        <div className="text-content">
          <h2 className="subtitle">–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–¥–∏–∞-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º</h2>
          <p>–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞, –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ–¥–∏–∞-–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞</p>
        </div>
        <div className="image-content">
          <div className="placeholder-image">AI Media</div>
        </div>
      </div>
    ),
    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
  },
  {
    id: '2',
    title: '–í—ã–∑–æ–≤—ã —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –º–µ–¥–∏–∞-–ª–∞–Ω–¥—à–∞—Ñ—Ç–∞',
    content: (
      <div className="challenge-content">
        <div className="ai-chat-visual">
          <div className="chat-interface">
            <div className="chat-header">
              <div className="chat-avatar">AI</div>
              <div className="chat-title">Media Assistant</div>
            </div>
            <div className="chat-messages">
              <div className="message user-message">
                <div className="message-content">–ù—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å 1000+ –≤–∏–¥–µ–æ</div>
              </div>
              <div className="message ai-message">
                <div className="message-content">–≠—Ç–æ –∑–∞–π–º–µ—Ç 48+ —á–∞—Å–æ–≤...</div>
              </div>
            </div>
          </div>
        </div>
        <div className="challenge-cards">
          <div className="challenge-card">
            <div className="card-icon">üìä</div>
            <h3>–û–±—ä–µ–º –¥–∞–Ω–Ω—ã—Ö</h3>
            <p>–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç –º–µ–¥–∏–∞-–∫–æ–Ω—Ç–µ–Ω—Ç–∞</p>
            <div className="card-stats">
              <span className="stat-value">+300%</span>
              <span className="stat-label">–≤ –≥–æ–¥</span>
            </div>
          </div>
          <div className="challenge-card">
            <div className="card-icon">‚è±Ô∏è</div>
            <h3>–°–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏</h3>
            <p>–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å–ª–∏—à–∫–æ–º –º–µ–¥–ª–µ–Ω–Ω—ã–µ</p>
            <div className="card-stats">
              <span className="stat-value">5-7x</span>
              <span className="stat-label">–º–µ–¥–ª–µ–Ω–Ω–µ–µ</span>
            </div>
          </div>
          <div className="challenge-card">
            <div className="card-icon">üí∏</div>
            <h3>–°—Ç–æ–∏–º–æ—Å—Ç—å</h3>
            <p>–í—ã—Å–æ–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã</p>
            <div className="card-stats">
              <span className="stat-value">40%</span>
              <span className="stat-label">–±—é–¥–∂–µ—Ç–∞</span>
            </div>
          </div>
        </div>
      </div>
    ),
    background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)'
  },
  {
    id: '3',
    title: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫ —Ä–µ—à–µ–Ω–∏—è',
    content: (
      <div>
        <ul className="list">
          <li className="list-item">React 18 + TypeScript - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥</li>
          <li className="list-item">Node.js + Python - –≤—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –±—ç–∫–µ–Ω–¥</li>
          <li className="list-item">TensorFlow/PyTorch - ML –∏ deep learning</li>
          <li className="list-item">Cloud Infrastructure - –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å</li>
          <li className="list-item">WebRTC + WebGL - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</li>
        </ul>
      </div>
    ),
    background: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)'
  }
];

function App() {
  const {
    currentSlide,
    totalSlides,
    isPlaying,
    nextSlide,
    prevSlide,
    togglePlayPause,
    setTotalSlides,
    setAnimating
  } = usePresentationStore();

  const [isExpanded, setIsExpanded] = React.useState(false);
  const { containerRef, containerEvents, expandEvents } = useEvents();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
  useEffect(() => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–¥–æ–≤
    setTotalSlides(slides.length);
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ API
    setupGlobalPresentationAPI();
    
    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    preloadImages(presentationImages)
      .then(() => console.log('‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω—ã'))
      .catch(err => console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', err));
  }, [setTotalSlides]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
  useEffect(() => {
    let interval: number;
    if (isPlaying) {
      interval = window.setInterval(() => {
        if (currentSlide < slides.length - 1) {
          nextSlide();
        } else {
          togglePlayPause();
        }
      }, 5000);
    }
    return () => {
      if (interval) {
        window.clearInterval(interval);
      }
    };
  }, [isPlaying, currentSlide, nextSlide, togglePlayPause]);

  const toggleExpand = () => {
    setIsExpanded(!isExpanded);
  };

  const containerClasses = [
    'presentation-container',
    isExpanded ? 'expanded' : ''
  ].filter(Boolean).join(' ');

  const expandBtnClasses = [
    'expand-btn',
    isExpanded ? 'expanded' : ''
  ].filter(Boolean).join(' ');

  return (
    <div className={containerClasses}>
      <div
        ref={containerRef}
        className="slides-container"
        {...containerEvents}
        style={{ outline: 'none' }} // –£–±–∏—Ä–∞–µ–º outline –¥–ª—è —Ñ–æ–∫—É—Å–∞
      >
        {slides.map((slide, index) => (
          <AnimatedSlide
            key={slide.id}
            slide={slide}
            isActive={index === currentSlide}
            animationType={index === 0 ? 'fade' : 'slide'}
          />
        ))}
      </div>
      
      <Navigation
        onNext={nextSlide}
        onPrev={prevSlide}
        onPlayPause={togglePlayPause}
        currentSlide={currentSlide}
        totalSlides={totalSlides}
        isPlaying={isPlaying}
      />

      <button
        className={expandBtnClasses}
        title={isExpanded ? "Collapse presentation" : "Expand presentation"}
        onClick={toggleExpand}
      >
        {isExpanded ? '‚õ∂' : '‚õ∂'}
      </button>
    </div>
  );
}

export default App;
