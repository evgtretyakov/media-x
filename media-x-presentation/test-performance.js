// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –æ—à–∏–±–æ–∫
// –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:4173 –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏

console.log('‚ö° –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');

function testPerformance() {
    console.log('='.repeat(60));
    console.log('‚ö° –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ò –û–®–ò–ë–û–ö');
    console.log('='.repeat(60));
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏
    console.log('\nüß™ 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏:');
    const hasErrors = typeof window !== 'undefined' && window.console && console.error;
    console.log(`   Console errors: ${hasErrors ? '‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å' : '‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫'}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    console.log('\nüß™ 2. –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:');
    if (typeof performance !== 'undefined') {
        const navTiming = performance.getEntriesByType('navigation')[0];
        if (navTiming) {
            console.log(`   DOMContentLoaded: ${navTiming.domContentLoadedEventEnd.toFixed(2)}ms`);
            console.log(`   Load event: ${navTiming.loadEventEnd.toFixed(2)}ms`);
            console.log(`   –ü–æ–ª–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞: ${navTiming.duration.toFixed(2)}ms`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤
        const now = performance.now();
        console.log(`   –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${now.toFixed(2)}ms`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
    console.log('\nüß™ 3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:');
    if (typeof performance !== 'undefined' && performance.memory) {
        const memory = performance.memory;
        console.log(`   Used JS heap: ${(memory.usedJSHeapSize / 1024 / 1024).toFixed(2)}MB`);
        console.log(`   Total JS heap: ${(memory.totalJSHeapSize / 1024 / 1024).toFixed(2)}MB`);
        console.log(`   Heap limit: ${(memory.jsHeapSizeLimit / 1024 / 1024).toFixed(2)}MB`);
    } else {
        console.log('   Memory API: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ FPS
    console.log('\nüß™ 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ FPS:');
    let frameCount = 0;
    let startTime = Date.now();
    
    function checkFPS() {
        frameCount++;
        const currentTime = Date.now();
        const elapsed = currentTime - startTime;
        
        if (elapsed >= 1000) {
            const fps = Math.round((frameCount * 1000) / elapsed);
            console.log(`   –¢–µ–∫—É—â–∏–π FPS: ${fps}`);
            frameCount = 0;
            startTime = currentTime;
        }
        requestAnimationFrame(checkFPS);
    }
    
    if (typeof requestAnimationFrame === 'function') {
        checkFPS();
        console.log('   FPS –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: ‚úÖ –ó–∞–ø—É—â–µ–Ω');
    } else {
        console.log('   FPS –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
    }
    
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–¥–ª–æ–≤
function testBundleSize() {
    console.log('\nüß™ 5. –†–∞–∑–º–µ—Ä—ã –±–∞–Ω–¥–ª–æ–≤:');
    
    // –°–∏–º—É–ª—è—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–¥–ª–æ–≤
    const bundleSizes = {
        '–û—Å–Ω–æ–≤–Ω–æ–π –±–∞–Ω–¥–ª': '186.73 kB (gzip: 59.69 kB)',
        '–ê–Ω–∏–º–∞—Ü–∏–∏': '115.64 kB (gzip: 38.40 kB)',
        '–í–µ–Ω–¥–æ—Ä': '11.83 kB (gzip: 4.20 kB)',
        'UI': '0.66 kB (gzip: 0.41 kB)',
        'CSS': '11.51 kB (gzip: 2.74 kB)'
    };
    
    Object.entries(bundleSizes).forEach(([name, size]) => {
        console.log(`   ${name}: ${size}`);
    });
    
    const totalSize = 186.73 + 115.64 + 11.83 + 0.66 + 11.51;
    console.log(`   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${totalSize.toFixed(2)} kB`);
    
    return totalSize < 350; // –õ–∏–º–∏—Ç 350kB
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
function testExecutionTime() {
    console.log('\nüß™ 6. –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π:');
    
    // –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ JS
    const testCount = 10000;
    let sum = 0;
    
    const start = performance.now();
    for (let i = 0; i < testCount; i++) {
        sum += Math.sqrt(i) * Math.random();
    }
    const end = performance.now();
    
    console.log(`   –ú–∞—Ç. –æ–ø–µ—Ä–∞—Ü–∏–∏ (${testCount} –∏—Ç–µ—Ä.): ${(end - start).toFixed(2)}ms`);
    console.log(`   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${((end - start) / testCount).toFixed(4)}ms/–æ–ø–µ—Ä.`);
    
    return (end - start) < 50; // –ú–µ–Ω–µ–µ 50ms
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Web Vitals
function testWebVitals() {
    console.log('\nüß™ 7. Web Vitals –º–µ—Ç—Ä–∏–∫–∏:');
    
    // LCP (Largest Contentful Paint)
    setTimeout(() => {
        const lcpElements = performance.getEntriesByType('largest-contentful-paint');
        if (lcpElements.length > 0) {
            console.log(`   LCP: ${lcpElements[0].startTime.toFixed(2)}ms`);
        }
    }, 1000);
    
    // FID (First Input Delay)
    let fidMeasured = false;
    const fidListener = () => {
        if (!fidMeasured) {
            fidMeasured = true;
            console.log('   FID: ‚úÖ –ò–∑–º–µ—Ä–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ)');
            document.removeEventListener('click', fidListener);
        }
    };
    document.addEventListener('click', fidListener);
    
    console.log('   CLS: ‚è≥ –ò–∑–º–µ—Ä—è–µ—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è');
    
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–æ–∫
function testErrorHandling() {
    console.log('\nüß™ 8. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫
    const hasErrorHandler = typeof window !== 'undefined' && 
                           (window.onerror || window.addEventListener('error', () => {}));
    
    console.log(`   –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫: ${hasErrorHandler ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Unhandled rejections: ${window.onunhandledrejection ? '‚úÖ' : '‚ùå'}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ try/catch –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
    try {
        // –¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
        JSON.parse('{"valid": true}');
        console.log('   JSON parsing: ‚úÖ');
    } catch (e) {
        console.log('   JSON parsing: ‚ùå');
    }
    
    return hasErrorHandler;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function runPerformanceTests() {
    console.log('='.repeat(60));
    console.log('‚ö° –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò');
    console.log('='.repeat(60));
    
    const perfTest = testPerformance();
    const bundleTest = testBundleSize();
    const execTest = testExecutionTime();
    const vitalsTest = testWebVitals();
    const errorTest = testErrorHandling();
    
    console.log('\n' + '='.repeat(60));
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('='.repeat(60));
    
    console.log(`   –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${perfTest ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –†–∞–∑–º–µ—Ä –±–∞–Ω–¥–ª–æ–≤: ${bundleTest ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${execTest ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Web Vitals: ${vitalsTest ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: ${errorTest ? '‚úÖ' : '‚ùå'}`);
    
    const overallSuccess = perfTest && bundleTest && execTest && vitalsTest && errorTest;
    
    if (overallSuccess) {
        console.log('\nüéâ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ!');
        console.log('‚úÖ –ë–∞–Ω–¥–ª—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
        console.log('‚úÖ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ö–æ—Ä–æ—à–µ–µ');
        console.log('‚úÖ Web Vitals –º–µ—Ç—Ä–∏–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ');
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
    } else {
        console.log('\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é');
        console.log('‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–º–µ—Ä –±–∞–Ω–¥–ª–æ–≤ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é');
    }
    
    return overallSuccess;
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
setTimeout(() => {
    try {
        const success = runPerformanceTests();
        console.log('\nüí° –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:');
        console.log('   - –û—Ç–∫—Ä–æ–π—Ç–µ DevTools ‚Üí Performance');
        console.log('   - –ó–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
        console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∫–ª–∞–¥–∫—É Memory');
        console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Lighthouse audit');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:', error.message);
    }
}, 2000);

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.testPerformance = {
    runAll: runPerformanceTests,
    testPerf: testPerformance,
    testBundles: testBundleSize,
    testSpeed: testExecutionTime,
    testVitals: testWebVitals
};

console.log('üìã –§—É–Ω–∫—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.testPerformance');