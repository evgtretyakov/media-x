// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
// –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:4173 –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏

console.log('üîÑ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏...');

function testCompatibility() {
    console.log('='.repeat(60));
    console.log('üîÑ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò –° –û–†–ò–ì–ò–ù–ê–õ–û–ú');
    console.log('='.repeat(60));
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ API
    console.log('\nüß™ 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ API:');
    const hasGlobalAPI = typeof window !== 'undefined' && window.presentation;
    console.log(`   window.presentation: ${hasGlobalAPI ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}`);
    
    if (hasGlobalAPI) {
        const api = window.presentation;
        console.log('   –ú–µ—Ç–æ–¥—ã API:');
        console.log(`     next: ${typeof api.next === 'function' ? '‚úÖ' : '‚ùå'}`);
        console.log(`     prev: ${typeof api.prev === 'function' ? '‚úÖ' : '‚ùå'}`);
        console.log(`     goTo: ${typeof api.goTo === 'function' ? '‚úÖ' : '‚ùå'}`);
        console.log(`     first: ${typeof api.first === 'function' ? '‚úÖ' : '‚ùå'}`);
        console.log(`     last: ${typeof api.last === 'function' ? '‚úÖ' : '‚ùå'}`);
        console.log(`     getCurrent: ${typeof api.getCurrent === 'function' ? '‚úÖ' : '‚ùå'}`);
        console.log(`     getTotal: ${typeof api.getTotal === 'function' ? '‚úÖ' : '‚ùå'}`);
        console.log(`     isAnimating: ${typeof api.isAnimating === 'function' ? '‚úÖ' : '‚ùå'}`);
        
        // –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
        console.log('\nüß™ 2. –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π API:');
        try {
            const current = api.getCurrent();
            const total = api.getTotal();
            const animating = api.isAnimating();
            
            console.log(`   –¢–µ–∫—É—â–∏–π —Å–ª–∞–π–¥: ${current}`);
            console.log(`   –í—Å–µ–≥–æ —Å–ª–∞–π–¥–æ–≤: ${total}`);
            console.log(`   –ê–Ω–∏–º–∞—Ü–∏—è: ${animating}`);
            
            console.log('   ‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç');
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≤ –±–∞–∑–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö: ${error.message}`);
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–ª–∞–π–¥–æ–≤
    console.log('\nüß™ 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–ª–∞–π–¥–æ–≤:');
    const slides = document.querySelectorAll('.slide');
    console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–¥–æ–≤: ${slides.length}`);
    
    if (slides.length > 0) {
        const firstSlide = slides[0];
        const hasTitle = firstSlide.querySelector('h1');
        const hasContent = firstSlide.querySelector('.content');
        
        console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${hasTitle ? '‚úÖ' : '‚ùå'}`);
        console.log(`   –ö–æ–Ω—Ç–µ–Ω—Ç: ${hasContent ? '‚úÖ' : '‚ùå'}`);
        console.log(`   CSS –∫–ª–∞—Å—Å—ã: ${firstSlide.className}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    console.log('\nüß™ 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:');
    const navButtons = document.querySelectorAll('button');
    const hasNavButtons = navButtons.length >= 2; // next/prev
    
    console.log(`   –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: ${navButtons.length} (${hasNavButtons ? '‚úÖ' : '‚ùå'})`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
    console.log('\nüß™ 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π:');
    const hasKeyEvents = typeof document !== 'undefined' && 
                        (document.onkeydown || document.addEventListener);
    const hasTouchEvents = 'ontouchstart' in window;
    
    console.log(`   –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: ${hasKeyEvents ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Touch —Å–æ–±—ã—Ç–∏—è: ${hasTouchEvents ? '‚úÖ' : '‚ùå'}`);
    
    return hasGlobalAPI && slides.length > 0;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
function testBackwardCompatibility() {
    console.log('\nüß™ 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏:');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º API
    const expectedMethods = ['next', 'prev', 'goTo', 'first', 'last', 'getCurrent', 'getTotal'];
    const optionalMethods = ['isAnimating', 'togglePlayPause'];
    
    if (window.presentation) {
        const api = window.presentation;
        let allMethodsPresent = true;
        
        expectedMethods.forEach(method => {
            if (typeof api[method] !== 'function') {
                console.log(`   ‚ùå –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ ${method} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
                allMethodsPresent = false;
            }
        });
        
        optionalMethods.forEach(method => {
            if (typeof api[method] !== 'function') {
                console.log(`   ‚ö†Ô∏è  –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ ${method} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
            }
        });
        
        if (allMethodsPresent) {
            console.log('   ‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        }
        
        return allMethodsPresent;
    }
    
    return false;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
function testIntegration() {
    console.log('\nüß™ 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ API –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∑–≤–Ω–µ
    try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const originalCurrent = window.presentation?.getCurrent();
        const originalTotal = window.presentation?.getTotal();
        
        console.log(`   –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç: ‚úÖ API –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è`);
        console.log(`   –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: —Å–ª–∞–π–¥ ${originalCurrent + 1} –∏–∑ ${originalTotal}`);
        
        return true;
    } catch (error) {
        console.log(`   –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç: ‚ùå ${error.message}`);
        return false;
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function runCompatibilityTests() {
    console.log('='.repeat(60));
    console.log('üîÑ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò');
    console.log('='.repeat(60));
    
    const compatTest = testCompatibility();
    const backwardTest = testBackwardCompatibility();
    const integrationTest = testIntegration();
    
    console.log('\n' + '='.repeat(60));
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('='.repeat(60));
    
    console.log(`   –ë–∞–∑–æ–≤–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: ${compatTest ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: ${backwardTest ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: ${integrationTest ? '‚úÖ' : '‚ùå'}`);
    
    const overallSuccess = compatTest && backwardTest && integrationTest;
    
    if (overallSuccess) {
        console.log('\nüéâ –ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º!');
        console.log('‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–æ–µ API —Ä–∞–±–æ—Ç–∞–µ—Ç');
        console.log('‚úÖ –í—Å–µ –º–µ—Ç–æ–¥—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–∞');
        console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–ª–∞–π–¥–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
    } else {
        console.log('\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏');
        console.log('‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ API –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
    }
    
    return overallSuccess;
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
setTimeout(() => {
    try {
        const success = runCompatibilityTests();
        console.log('\nüí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:');
        console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ window.presentation.next()');
        console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ window.presentation.prev()');
        console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ window.presentation.goTo(2)');
        console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ window.presentation.getCurrent()');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏:', error.message);
    }
}, 1000);

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.testCompatibility = {
    runAll: runCompatibilityTests,
    testAPI: testCompatibility,
    testBackward: testBackwardCompatibility,
    testIntegration: testIntegration
};

console.log('üìã –§—É–Ω–∫—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.testCompatibility');