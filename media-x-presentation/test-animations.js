// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π —Å–ª–∞–π–¥–æ–≤
// –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏

console.log('üé¨ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π...');

function testAnimations() {
    console.log('='.repeat(60));
    console.log('üé¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ù–ò–ú–ê–¶–ò–ô –ò –ü–ï–†–ï–•–û–î–û–í');
    console.log('='.repeat(60));
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Framer Motion
    console.log('\nüß™ 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Framer Motion:');
    const hasFramerMotion = typeof window !== 'undefined' && window.__FRAMER_MOTION__;
    console.log(`   Framer Motion: ${hasFramerMotion ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ motion —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    console.log('\nüß™ 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ motion —ç–ª–µ–º–µ–Ω—Ç–æ–≤:');
    const motionElements = document.querySelectorAll('[data-framer-animation], [class*="motion-"]');
    console.log(`   Motion —ç–ª–µ–º–µ–Ω—Ç—ã: ${motionElements.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∞—Å—Å–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–π
    console.log('\nüß™ 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS –∞–Ω–∏–º–∞—Ü–∏–π:');
    const animatedElements = document.querySelectorAll('[class*="animate"], [class*="animation"]');
    console.log(`   –≠–ª–µ–º–µ–Ω—Ç—ã —Å –∫–ª–∞—Å—Å–∞–º–∏ –∞–Ω–∏–º–∞—Ü–∏–π: ${animatedElements.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ transition –∫–ª–∞—Å—Å–æ–≤
    const transitionElements = document.querySelectorAll('[class*="transition"]');
    console.log(`   –≠–ª–µ–º–µ–Ω—Ç—ã —Å transition: ${transitionElements.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞
    console.log('\nüß™ 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞:');
    const activeSlide = document.querySelector('.slide.active');
    console.log(`   –ê–∫—Ç–∏–≤–Ω—ã–π —Å–ª–∞–π–¥: ${activeSlide ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}`);
    
    if (activeSlide) {
        const title = activeSlide.querySelector('h1');
        const content = activeSlide.querySelector('.content');
        
        console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${title ? '‚úÖ' : '‚ùå'}`);
        console.log(`   –ö–æ–Ω—Ç–µ–Ω—Ç: ${content ? '‚úÖ' : '‚ùå'}`);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π –∞–Ω–∏–º–∞—Ü–∏–π
        const titleStyle = title ? window.getComputedStyle(title) : null;
        const contentStyle = content ? window.getComputedStyle(content) : null;
        
        if (titleStyle) {
            console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫ transition: ${titleStyle.transition || titleStyle.transitionProperty || '–Ω–µ—Ç'}`);
        }
        if (contentStyle) {
            console.log(`   –ö–æ–Ω—Ç–µ–Ω—Ç transition: ${contentStyle.transition || contentStyle.transitionProperty || '–Ω–µ—Ç'}`);
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π
    console.log('\nüß™ 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö CSS –∞–Ω–∏–º–∞—Ü–∏–π:');
    const styleSheets = document.styleSheets;
    let animationCount = 0;
    let keyframeCount = 0;
    
    for (let i = 0; i < styleSheets.length; i++) {
        try {
            const rules = styleSheets[i].cssRules || styleSheets[i].rules;
            for (let j = 0; j < rules.length; j++) {
                const rule = rules[j];
                if (rule.constructor.name === 'CSSKeyframesRule') {
                    keyframeCount++;
                    console.log(`     Keyframe: ${rule.name}`);
                }
                if (rule.style && (rule.style.animation || rule.style.transition)) {
                    animationCount++;
                }
            }
        } catch (e) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ CORS
        }
    }
    
    console.log(`   CSS Keyframes: ${keyframeCount}`);
    console.log(`   CSS Animation –ø—Ä–∞–≤–∏–ª: ${animationCount}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è —Å–ª–∞–π–¥–æ–≤
    console.log('\nüß™ 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π:');
    const challengeElements = document.querySelectorAll('[class*="challenge"]');
    const depthElements = document.querySelectorAll('[class*="depth"]');
    const metricsElements = document.querySelectorAll('[class*="metric"]');
    
    console.log(`   –≠–ª–µ–º–µ–Ω—Ç—ã Challenge —Å–ª–∞–π–¥–∞: ${challengeElements.length}`);
    console.log(`   –≠–ª–µ–º–µ–Ω—Ç—ã Depth —Å–ª–∞–π–¥–∞: ${depthElements.length}`);
    console.log(`   –≠–ª–µ–º–µ–Ω—Ç—ã Metrics —Å–ª–∞–π–¥–∞: ${metricsElements.length}`);
    
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏
function testSlideTransitions() {
    console.log('\nüß™ 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏:');
    
    const store = window.__PRESENTATION_STORE__;
    if (!store) {
        console.log('   ‚ùå Store –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤');
        return false;
    }
    
    console.log('   –î–æ—Å—Ç—É–ø–Ω—ã –º–µ—Ç–æ–¥—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:');
    console.log(`     nextSlide: ${typeof store.nextSlide === 'function' ? '‚úÖ' : '‚ùå'}`);
    console.log(`     prevSlide: ${typeof store.prevSlide === 'function' ? '‚úÖ' : '‚ùå'}`);
    console.log(`     goToSlide: ${typeof store.goToSlide === 'function' ? '‚úÖ' : '‚ùå'}`);
    
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–π
function testAnimationPerformance() {
    console.log('\nüß™ 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–π:');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ requestAnimationFrame
    const hasRAF = typeof requestAnimationFrame === 'function';
    console.log(`   requestAnimationFrame: ${hasRAF ? '‚úÖ' : '‚ùå'}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ performance API
    const hasPerformance = typeof performance !== 'undefined';
    console.log(`   Performance API: ${hasPerformance ? '‚úÖ' : '‚ùå'}`);
    
    if (hasPerformance) {
        console.log(`   Timing resolution: ${performance.now() ? '‚úÖ' : '‚ùå'}`);
    }
    
    return true;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function runAnimationTests() {
    console.log('='.repeat(60));
    console.log('üé¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ù–ò–ú–ê–¶–ò–ô –°–õ–ê–ô–î–û–í');
    console.log('='.repeat(60));
    
    const animTest = testAnimations();
    const transitionTest = testSlideTransitions();
    const perfTest = testAnimationPerformance();
    
    console.log('\n' + '='.repeat(60));
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ê–ù–ò–ú–ê–¶–ò–ô:');
    console.log('='.repeat(60));
    
    console.log(`   –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${animTest ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏: ${transitionTest ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${perfTest ? '‚úÖ' : '‚ùå'}`);
    
    const overallSuccess = animTest && transitionTest && perfTest;
    
    if (overallSuccess) {
        console.log('\nüéâ –ê–Ω–∏–º–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!');
        console.log('‚úÖ Framer Motion –∑–∞–≥—Ä—É–∂–µ–Ω');
        console.log('‚úÖ –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        console.log('‚úÖ –ú–µ—Ç–æ–¥—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã');
        console.log('‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞');
    } else {
        console.log('\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏');
        console.log('‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–Ω–∏–º–∞—Ü–∏–π');
    }
    
    return overallSuccess;
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
setTimeout(() => {
    try {
        const success = runAnimationTests();
        console.log('\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
        console.log('   - –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏ (–∫–Ω–æ–ø–∫–∏/–∫–ª–∞–≤–∏—à–∏)');
        console.log('   - –ü—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–π');
        console.log('   - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π:', error.message);
    }
}, 1000);

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.testAnimations = {
    runAll: runAnimationTests,
    testBasic: testAnimations,
    testTransitions: testSlideTransitions,
    testPerformance: testAnimationPerformance
};

console.log('üìã –§—É–Ω–∫—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.testAnimations');