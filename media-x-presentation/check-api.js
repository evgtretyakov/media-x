// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ API —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ API presentation...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
function checkPresentationAPI() {
    console.log('='.repeat(50));
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ì–õ–û–ë–ê–õ–¨–ù–û–ì–û API');
    console.log('='.repeat(50));
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    if (typeof window === 'undefined') {
        console.log('‚ùå window –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω (–≤–µ—Ä–æ—è—Ç–Ω–æ, Node.js —Å—Ä–µ–¥–∞)');
        return false;
    }
    
    if (!window.presentation) {
        console.log('‚ùå window.presentation –Ω–µ –Ω–∞–π–¥–µ–Ω');
        console.log('‚ÑπÔ∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:');
        console.log('   - –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ http://localhost:4173');
        console.log('   - –§—É–Ω–∫—Ü–∏—è setupGlobalPresentationAPI() –≤—ã–∑–≤–∞–Ω–∞');
        console.log('   - –ù–µ—Ç –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞');
        return false;
    }
    
    console.log('‚úÖ window.presentation –Ω–∞–π–¥–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ API
    const api = window.presentation;
    const requiredMethods = ['next', 'prev', 'goTo', 'first', 'last', 'getCurrent', 'getTotal'];
    const optionalMethods = ['isAnimating'];
    
    let allMethodsPresent = true;
    
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤:');
    requiredMethods.forEach(method => {
        const exists = typeof api[method] === 'function';
        console.log(`   ${method}: ${exists ? '‚úÖ' : '‚ùå'}`);
        if (!exists) allMethodsPresent = false;
    });
    
    optionalMethods.forEach(method => {
        const exists = typeof api[method] === 'function';
        console.log(`   ${method}: ${exists ? '‚úÖ' : '‚ö†Ô∏è '}`);
    });
    
    if (!allMethodsPresent) {
        console.log('\n‚ùå –ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        return false;
    }
    
    console.log('\n‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    
    // –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –º–µ—Ç–æ–¥–æ–≤
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:');
    try {
        const currentSlide = api.getCurrent();
        const totalSlides = api.getTotal();
        const isAnimating = api.isAnimating ? api.isAnimating() : false;
        
        console.log(`   –¢–µ–∫—É—â–∏–π —Å–ª–∞–π–¥: ${currentSlide + 1}/${totalSlides}`);
        console.log(`   –ê–Ω–∏–º–∞—Ü–∏—è: ${isAnimating}`);
        console.log(`   –ú–æ–∂–Ω–æ –ª–∏ –≤–ø–µ—Ä–µ–¥: ${currentSlide < totalSlides - 1}`);
        console.log(`   –ú–æ–∂–Ω–æ –ª–∏ –Ω–∞–∑–∞–¥: ${currentSlide > 0}`);
        
        console.log('\n‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        
    } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π: ${error.message}`);
        return false;
    }
    
    return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã API
function demonstrateAPI() {
    if (!checkPresentationAPI()) return;
    
    const api = window.presentation;
    console.log('\nüé¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã API:');
    console.log('–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('   presentation.next()      - —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥');
    console.log('   presentation.prev()      - –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥');
    console.log('   presentation.goTo(1)     - –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–∞–π–¥—É 2');
    console.log('   presentation.first()     - –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥');
    console.log('   presentation.last()      - –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥');
    console.log('   presentation.getCurrent() - —Ç–µ–∫—É—â–∏–π —Å–ª–∞–π–¥');
    console.log('   presentation.getTotal()   - –≤—Å–µ–≥–æ —Å–ª–∞–π–¥–æ–≤');
    
    // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    window.testNext = () => {
        console.log('‚ñ∂Ô∏è  presentation.next()');
        api.next();
        updateStatus();
    };
    
    window.testPrev = () => {
        console.log('‚óÄÔ∏è  presentation.prev()');
        api.prev();
        updateStatus();
    };
    
    window.testGoTo = (slide) => {
        console.log(`üî¢ presentation.goTo(${slide})`);
        api.goTo(slide);
        updateStatus();
    };
    
    window.testFirst = () => {
        console.log('‚èÆÔ∏è  presentation.first()');
        api.first();
        updateStatus();
    };
    
    window.testLast = () => {
        console.log('‚è≠Ô∏è  presentation.last()');
        api.last();
        updateStatus();
    };
    
    function updateStatus() {
        setTimeout(() => {
            const current = api.getCurrent();
            const total = api.getTotal();
            console.log(`üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: —Å–ª–∞–π–¥ ${current + 1}/${total}`);
        }, 100);
    }
    
    console.log('\nüöÄ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('   testNext()    - —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥');
    console.log('   testPrev()    - –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥');
    console.log('   testGoTo(n)   - –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–∞–π–¥—É n');
    console.log('   testFirst()   - –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥');
    console.log('   testLast()    - –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥');
    
    console.log('\nüéâ –ì–ª–æ–±–∞–ª—å–Ω–æ–µ API –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
setTimeout(() => {
    console.log('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ API...');
    const success = checkPresentationAPI();
    
    if (success) {
        console.log('\nüéâ –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨ –° –û–†–ò–ì–ò–ù–ê–õ–û–ú: ‚úÖ –£–°–ü–ï–®–ù–û');
        console.log('–ì–ª–æ–±–∞–ª—å–Ω–æ–µ API presentation –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ');
        console.log('—Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π jQuery —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏');
        
        // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
        console.log('\nüí° –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ: demonstrateAPI()');
    } else {
        console.log('\n‚ùå –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨ –° –û–†–ò–ì–ò–ù–ê–õ–û–ú: –ù–ï –£–î–ê–õ–ê–°–¨');
        console.log('–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ API');
    }
}, 1000);

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.checkPresentationAPI = checkPresentationAPI;
window.demonstrateAPI = demonstrateAPI;

console.log('üìã –§—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã:');
console.log('   checkPresentationAPI() - –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞');
console.log('   demonstrateAPI()       - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã');